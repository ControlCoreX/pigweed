# Copyright 2025 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

load("@pigweed//pw_build:compatibility.bzl", "incompatible_with_mcu")
load("@rules_rust//rust:defs.bzl", "rust_binary", "rust_library")
load("//pw_build:merge_flags.bzl", "flags_from_dict")
load("//pw_kernel:flags.bzl", "KERNEL_COMMON_FLAGS")

COMMON_DEPS = [
    "//pw_kernel/kernel",
    "//pw_kernel/subsys/console:console_backend",
    "//pw_kernel/target:demo",
    "//pw_kernel/target:target_common",
]

platform(
    name = "host",
    flags = flags_from_dict(
        KERNEL_COMMON_FLAGS | {
            "//pw_kernel/config:kernel_config": ":config",
            "//pw_kernel/lib/unittest:unittest_runner": ":unittest_runner",
            "//pw_kernel/subsys/console:console_backend": "//pw_kernel/subsys/console:console_backend_stdio",
            # For simplicity have the host use basic logger rather than tokenized logger.
            "//pw_log/rust:pw_log_backend": "//pw_kernel/subsys/console:pw_log_backend_basic",
        },
    ),
    parents = ["@local_config_platform//:host"],
    visibility = ["//visibility:private"],
)

rust_binary(
    name = "target",
    srcs = ["target.rs"],
    edition = "2021",
    tags = ["kernel"],
    target_compatible_with = incompatible_with_mcu(),
    deps = COMMON_DEPS,
)

# When building as a unit test runner, this target will be depended upon by
# other libraries (in other words, it won't be the root of the dependency
# graph). Declaring this as a `rust_binary` would result in it being built, but
# not linked against the other libraries in the build graph.
rust_library(
    name = "unittest_runner",
    srcs = ["target.rs"],
    crate_features = ["test"],
    crate_name = "unittest_runner",
    edition = "2021",
    tags = ["kernel"],
    target_compatible_with = incompatible_with_mcu(),
    deps = COMMON_DEPS + ["//pw_kernel/lib/unittest:unittest_core"],
)

rust_library(
    name = "config",
    srcs = ["config.rs"],
    crate_name = "kernel_config",
    tags = ["kernel"],
    target_compatible_with = incompatible_with_mcu(),
    deps = [
        "//pw_kernel/config:kernel_config_interface",
    ],
)
